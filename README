


# install the latest version of node


... 

...


source ~/.bashrc

-------------------------------------------------------------------------------
### Install docker on Ubuntu

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

-------------------------------------------------------------------------------
### Start docker using docker-compose.yml file from the project: 
sudo docker compose up dev-db -d


-------------------------------------------------------------------------------
### Install Prisma
npm install prisma --save-dev

npx prisma

npx prisma init
-------------------------------------------------------------------------------
Fetching latest updates for this subcommand...

âœ” Your Prisma schema was created at prisma/schema.prisma
  You can now open it in your favorite editor.

warn You already have a .gitignore file. Don't forget to add `.env` in it to not commit any private information.

Next steps:
1. Set the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started
2. Set the provider of the datasource block in schema.prisma to match your database: postgresql, mysql, sqlite, sqlserver, mongodb or cockroachdb.
3. Run prisma db pull to turn your database schema into a Prisma schema.
4. Run prisma generate to generate the Prisma Client. You can then start querying your database.
5. Tip: Explore how you can extend the ORM with scalable connection pooling, global caching, and real-time database events. Read: https://pris.ly/cli/beyond-orm

More information in our documentation:
https://pris.ly/d/getting-started
-----------------------------------------------------------

### Prisma usefull commands
npx prisma --help
npx prisma migrate dev
npx prisma generate
npx prisma studio


### Install bcrypt packages
npm i bcrypt
npm i -D @types/bcrypt



### Install JWT package
npm install --save @nestjs/jwt



### Install passport packages
npm install --save @nestjs/passport passport passport-local
npm install --save-dev @types/passport-local
npm install --save passport-jwt
npm install --save-dev @types/passport-jwt

npm install passport-local
npm install @types/passport-local --save-dev


### Install validator class
npm install class-validator class-transformer

### Install swagger
npm install --save @nestjs/swagger

### Add nestjs config
npm install --save @nestjs/config

### Install eslint and prettier
npm install --save-dev eslint prettier eslint-config-prettier eslint-plugin-prettier
npm install --save-dev @typescript-eslint/parser 
npm install --save-dev @typescript-eslint/eslint-plugin

npm install --save-dev eslint @eslint/js typescript typescript-eslint

### Format the code 
npm run format
npm run lint



